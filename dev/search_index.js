var documenterSearchIndex = {"docs":
[{"location":"pages/overview/#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"On this page, we give an overview of the DiffFusion.jl modelling framework.","category":"page"},{"location":"pages/overview/#What-Is-the-Purpose-of-the-Framework?","page":"Overview","title":"What Is the Purpose of the Framework?","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Scenario-based financial instrument pricing is at the core of most risk management processes and methods. The DiffFusion.jl modelling framework provides a flexible and computationally efficient simulation and pricing engine. It contains state-of-the art model implementations that go beyond what is available in many similar open source and proprietary systems.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The framework is designed for regular large-scale portfolio simulations as well as ad-hoc and interactive pricing and risk calculation analysis. As such, the framework can be used in production processes as well for benchmarking and model validation purposes. ","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"DiffFusion.jl is decomposed into the following components:","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"scenario generation,\nscenario-based financial instrument pricing and sensitivity calculation, as well as\nscenario-based risk measure calculation.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The components can be used independently. However, they develop their full potential when combined together. ","category":"page"},{"location":"pages/overview/#Scenario-Generation","page":"Overview","title":"Scenario Generation","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Scenario generation is based on Monte Carlo simulation of risk factors. Risk factors are represented by generic model state variables. The evolution of the model state variables is based on diffusion models.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The diffusion models in the DiffFusion.jl framework represent market standard risk neutral valuation models. For details on the specific models, see the model section. A key objective of the framework is flexibility regarding the choice model. For example, you can combine multi-factor rates models for major currencies with single-factor rates models for other currencies.  ","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Component models for e.g. interest rates, exchange rates and equities are combined into a cross-asset hybrid model. The joint evolution of the hybrid model state variables is then calculated by Monte Carlo simulation.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The Monte Carlo method in the DiffFusion.jl framework uses bias-free simulation of random variables whenever the model allows for. This approach provides flexibility on the chosen time grid and allows simulating long time-horizons without sacrificing simulation accuracy. Random numbers are drawn from efficient pseudo-random number generators or low-discrepancy sequences.","category":"page"},{"location":"pages/overview/#Financial-Instrument-Pricing-and-Sensitivity-Calculation","page":"Overview","title":"Financial Instrument Pricing and Sensitivity Calculation","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Financial instruments in the DiffFusion.jl framework are represented as a layered composition of payoffs, cash flows and cash flow legs. Each layer adds a level of abstraction and common functionality. Cash flow legs are finally combined into products and portfolios.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The layered design of portfolios and products allows for a very flexible extendability of the framework for new products and feature. Exotic products can easily be integrated since payoffs and payoff-scripting are integral functionalities by design.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Portfolios and products are agnostic to the simulation model and Monte Carlo method. The link between model, simulation and market data is established via a separate entity that holds the context details. This feature also contributes to the flexibility and extendability of the framework. ","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Future risk-neutral prices of portfolios and products are calculated using the simulated state variables and the corresponding models. We implement analytical pricing methods whenever available and appropriate. American Monte-Carlo methods are available for complex products.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Sensitivities of future prices are calculated efficiently using Algorithmic Differentiation (AD) methods. AD methods are directly available in the Julia language. For more details on AD in Julia, see the Julia setion. ","category":"page"},{"location":"pages/overview/#Risk-Measure-Calculation","page":"Overview","title":"Risk Measure Calculation","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Scenario prices for portfolios and products are stored in a three-dimensional scenario cube. The axes of the cube are simulated scenarios, future observation times and individual product legs. With these data we calculate risk measures like expected exposure and potential future exposure. New risk measures can easily be added to the framework. Alternatively, scenario cubes can also be processed by client applications or directly by the user.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Portfolio risk measures need to take into account collateralization. We model collateral directly based on relevant CSA parameters like threshold, minimum transfer amount and independent amount. Collateralized portfolios are modelled using a margin period of risk. The methodology allows for an accurate portfolio modelling. In particular, we can model exposure spikes following large payments.","category":"page"},{"location":"pages/overview/#What-Models-and-Products-Are-Covered?","page":"Overview","title":"What Models and Products Are Covered?","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The DiffFusion.jl framework covers models for interest rates, exchange rates. Further asset classes like equities/indices, inflation, commodity futures, and credit spreads will be added. All models can be combined into hybrid models for joint simulation.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Financial products are composed of cash flows. Cash flows for linear products are directly available in the framework. New cash flow types can easily be added.","category":"page"},{"location":"pages/overview/#Component-Models","page":"Overview","title":"Component Models","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"We make extensive use of the Heath-Jarrow-Morton (HJM) framework for the component models. This approach yields most analytical tractability for simulation, pricing and model calibration. More complex model variants can be easily added to the framework.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Interest rates are modelled as multi-factor Gaussian HJM models. Such models allow for a rich set of simulated yield curves involving curve shifts, slopes and curvatures. The models can be calibration to the full surface of at-the-money swaptions. In its single-factor form, the model reduces to the classical Hull-White interest rate model.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Exchange rates are modelled in a classical Black-Scholes-type model. Exchange rate models are linked to the corresponding domestic and foreign interest rate models. Calibration of the models takes into account the joint evolution of exchange rates as well as corresponding interest rates.","category":"page"},{"location":"pages/overview/#Cash-Flows-and-Legs","page":"Overview","title":"Cash Flows and Legs","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The DiffFusion.jl framework already includes standard fixed income and interest rate cash flows for principal payments, fixed rates and floating rates.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Linear FX and cross currency instruments are covered by the interest rate cash flows and exchange rate conversion. Additional principal payments in mark-to-market cross currency swaps are handled by a specific leg type.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Further cash flow typed and leg types will be added going forward.","category":"page"},{"location":"pages/overview/#Why-Do-We-Use-Julia-Language?","page":"Overview","title":"Why Do We Use Julia Language?","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Risk factor simulation and scenario-based financial instrument pricing are computationally expensive calculations. Efficient implementation of such calculations requires fast compiled machine code, ability to parallelize and distribute calculations as well as support for high-performance computing hardware like GPU. The Julia language natively fulfills all these requirements.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Development in Julia language is lightweight and similar to languages like Python. As a result, new functionalities can easily be added within the framework or attached by client applications or user interaction.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"Sensitivity calculation is critical for risk management processes. For exposure simulations, sensitivity calculations can be particularly challenging from a computational perspective. These challenges are addressed by Automatic Differentiation (AD) methods. Julia language supports forward mode and reverse mode AD via operator overloading and source transformation. We leverage these language features and provide efficient and accurate Delta and Vega calculations.","category":"page"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"The DiffFusion.jl framework can be incorporated as package in Julia application and user code. Furthermore, the framework can be used e.g. in Jupyter notebooks, Python code and R code via Julia's interfaces to these environments. The DiffFusion.jl framework can also run fully independent, e.g. in a Docker container.","category":"page"},{"location":"pages/overview/#Related-Literature-and-References","page":"Overview","title":"Related Literature and References","text":"","category":"section"},{"location":"pages/overview/","page":"Overview","title":"Overview","text":"L. Andersen, V. Piterbarg. Interest Rate Modeling. 2010.\nR. Jarrow, Y. Yildirim. Pricing Treasury Inflation Protected Securities and Related Derivatives Using an Hjm Model. 2003.\nL. Andersen. Markov Models for Commodity Futures: Theory and Practice. 2008.\nA. Green. XVA. 2016.\nL. Andersen, M. Pykhtin, A. Sokol. Rethinking Margin Period of Risk. 2016.\nThe Julia Programming Language\nPyJulia - a Python interface to the Julia language\nJuliaCall - an R interface to the Julia language","category":"page"},{"location":"pages/function_index/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"pages/function_index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"#DiffFusion.jl-[F]","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"","category":"section"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"Documentation for DiffFusion.jl","category":"page"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"The DiffFusion.jl package implements a framework for joint simulation of financial risk factors, risk-neutral valuation of financial instruments and calculation of portfolio risk measures.","category":"page"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"The intended purpose of the package is efficient exposure simulation for XVA and Counterparty Credit Risk (CCR).","category":"page"},{"location":"#Installation","page":"DiffFusion.jl [∂F]","title":"Installation","text":"","category":"section"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"The package can be obtained as source code directly via","category":"page"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"git clone https://github.com/frame-consulting/DiffFusion.jl","category":"page"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"This package is in development stage. For details on the intended funcitonality, see the Overview page.","category":"page"},{"location":"","page":"DiffFusion.jl [∂F]","title":"DiffFusion.jl [∂F]","text":"For questions please contact info@frame-consult.de.","category":"page"}]
}
